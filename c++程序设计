位运算：
    1.按位与“&”：相同为1，不同为0.
      通常用来将某变量中的某些位清0且同时保留其他位不变。也可用来获取某些变量中的某一位。
      例如，如果需要将int型变量n的低8位全置成0，而其余位不变，则可以执行：
      n=n&0xffffff00; 也可写成： n&=0xffffff00;
      若n是short类型的，则只需执行： n&=0xff00;
      如果想判断一个int型变量n的第7位（从右往左）是否是1，只需看表达式“n&0x80”的值是否等于"0x80";    0x80=1000 0000(二进制)
      
    2.按位或“|”:其功能是参与运算的两数各对应的二进位相或。只要对应的二个二进位有一个为1时，结果位就为1。
      按位或运算通常用来将某些位置1且保其余位不变。
      
    3.按位异或“^”：相同为0，不同为1；  
      按位异或通常用来将某些变量中的某些为取反，且保留其他位不变。
      如果a^b=c,那么就有c^b=a以及c^a=b。
      异或运算还能实现不通过临时变量，就能交换两个变量的值。
      例如： 
          int a=5,b=7;
          a=a^b;
          b=b^a;
          a=a^b;
          此时：a=7,b=5;
          
    4.按位非“~”：单目运算符，功能是将二进制中0变1，1变0（取反）。
    
    5.左移运算符“<<”：
        表达式：
        a<<b 的值是：将a各二进制位全部左移b位后得到的值。左移时，高位丢弃，低位补0。a的值不因运算而改变。
        实际上，左移1位，就相当是乘以2，左移n位，就相当于是乘以2的n次方。但左移操作比乘法操作快得多。
      
     6.右移运算符“>>”
        表达式：
        a>>b
        的值是：将a各二进制位全部右移b位得到的值。右移时，移除最右边的位就被丢弃。a的值不因运算而改变。
        对于有符号数，如long,int,short,char类型变量，在右移时，符号位（即最高位）将一起移动，并且大多数C/C++编译器规定，如果原
        符号位为1，则右移时高位就补1，原符号位为0，则补0。
         实际上，左移1位，就相当是乘以2，左移n位，就相当于是乘以2的n次方。并且结果往小里取整。
